/* <!-- auth-popup.php -->
<div class="popup-overlay" id="authPopup">
    <div class="popup-container">
        <div class="popup-close" onclick="closeAuthPopup()">Ã—</div>
        
        <!-- Login Form -->
        <div class="auth-form" id="loginForm">
            <h2>Login</h2>
            <form id="loginFormElement" onsubmit="return validateLoginForm(event)">
                <div class="form-group">
                    <input type="email" id="loginEmail" name="email" placeholder="Email" required>
                    <span class="error-message" id="loginEmailError"></span>
                </div>
                
                <div class="form-group">
                    <input type="password" id="loginPassword" name="password" placeholder="Password" required>
                    <span class="error-message" id="loginPasswordError"></span>
                </div>
                
                <button type="submit" class="auth-button">Login</button>
            </form>
            <p>Don't have an account? <a href="#" onclick="toggleAuthForms()">Register</a></p>
        </div>
        
        <!-- Registration Form -->
        <div class="auth-form" id="registerForm" style="display: none;">
            <h2>Register</h2>
            <form id="registerFormElement" onsubmit="return validateRegisterForm(event)">
                <div class="form-group">
                    <input type="text" id="registerName" name="name" placeholder="Full Name" required>
                    <span class="error-message" id="registerNameError"></span>
                </div>
                
                <div class="form-group">
                    <input type="email" id="registerEmail" name="email" placeholder="Email" required>
                    <span class="error-message" id="registerEmailError"></span>
                </div>
                
                <div class="form-group">
                    <input type="tel" id="registerPhone" name="phone" placeholder="Phone Number" required>
                    <span class="error-message" id="registerPhoneError"></span>
                </div>
                
                <div class="form-group">
                    <input type="password" id="registerPassword" name="password" placeholder="Password" required>
                    <span class="error-message" id="registerPasswordError"></span>
                </div>
                
                <div class="form-group">
                    <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" required>
                    <span class="error-message" id="confirmPasswordError"></span>
                </div>
                
                <button type="submit" class="auth-button">Register</button>
            </form>
            <p>Already have an account? <a href="#" onclick="toggleAuthForms()">Login</a></p>
        </div>
    </div>
</div>

<style>
// Auth Popup Styles 
.popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    justify-content: center;
    align-items: center;
}

.popup-container {
    background-color: white;
    padding: 2rem;
    border-radius: 10px;
    position: relative;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.popup-close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    cursor: pointer;
    color: #666;
}

.auth-form {
    padding: 1rem 0;
}

.auth-form h2 {
    text-align: center;
    margin-bottom: 1.5rem;
    color: #333;
}

.form-group {
    margin-bottom: 1rem;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;
}

.error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: block;
}

.auth-button {
    width: 100%;
    padding: 12px;
    background-color: #ffd700;
    border: none;
    border-radius: 5px;
    color: #333;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
}

.auth-button:hover {
    background-color: #e6c200;
}

.auth-form p {
    text-align: center;
    margin-top: 1rem;
}

.auth-form a {
    color: #ffd700;
    text-decoration: none;
}

.auth-form a:hover {
    text-decoration: underline;
}

@media (max-width: 480px) {
    .popup-container {
        width: 95%;
        padding: 1.5rem;
    }
}
</style>

<script>
// Auth Popup Functions
function openAuthPopup(type = 'login') {
    document.getElementById('authPopup').style.display = 'flex';
    if (type === 'register') {
        document.getElementById('loginForm').style.display = 'none';
        document.getElementById('registerForm').style.display = 'block';
    } else {
        document.getElementById('loginForm').style.display = 'block';
        document.getElementById('registerForm').style.display = 'none';
    }
}

function closeAuthPopup() {
    document.getElementById('authPopup').style.display = 'none';
}

function toggleAuthForms() {
    const loginForm = document.getElementById('loginForm');
    const registerForm = document.getElementById('registerForm');
    
    if (loginForm.style.display === 'none') {
        loginForm.style.display = 'block';
        registerForm.style.display = 'none';
    } else {
        loginForm.style.display = 'none';
        registerForm.style.display = 'block';
    }
}

// Form Validation Functions
function validateLoginForm(event) {
    event.preventDefault();
    let isValid = true;
    
    // Email validation
    const email = document.getElementById('loginEmail');
    const emailError = document.getElementById('loginEmailError');
    if (!validateEmail(email.value)) {
        emailError.textContent = 'Please enter a valid email address';
        isValid = false;
    } else {
        emailError.textContent = '';
    }
    
    // Password validation
    const password = document.getElementById('loginPassword');
    const passwordError = document.getElementById('loginPasswordError');
    if (password.value.length < 6) {
        passwordError.textContent = 'Password must be at least 6 characters';
        isValid = false;
    } else {
        passwordError.textContent = '';
    }
    
    if (isValid) {
        // Submit form to server
        const formData = new FormData(event.target);
        submitLogin(formData);
    }
    
    return false;
}

function validateRegisterForm(event) {
    event.preventDefault();
    let isValid = true;
    
    // Name validation
    const name = document.getElementById('registerName');
    const nameError = document.getElementById('registerNameError');
    if (name.value.length < 2) {
        nameError.textContent = 'Please enter your full name';
        isValid = false;
    } else {
        nameError.textContent = '';
    }
    
    // Email validation
    const email = document.getElementById('registerEmail');
    const emailError = document.getElementById('registerEmailError');
    if (!validateEmail(email.value)) {
        emailError.textContent = 'Please enter a valid email address';
        isValid = false;
    } else {
        emailError.textContent = '';
    }
    
    // Phone validation
    const phone = document.getElementById('registerPhone');
    const phoneError = document.getElementById('registerPhoneError');
    if (!validatePhone(phone.value)) {
        phoneError.textContent = 'Please enter a valid phone number';
        isValid = false;
    } else {
        phoneError.textContent = '';
    }
    
    // Password validation
    const password = document.getElementById('registerPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const passwordError = document.getElementById('registerPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    
    if (password.value.length < 6) {
        passwordError.textContent = 'Password must be at least 6 characters';
        isValid = false;
    } else {
        passwordError.textContent = '';
    }
    
    if (password.value !== confirmPassword.value) {
        confirmPasswordError.textContent = 'Passwords do not match';
        isValid = false;
    } else {
        confirmPasswordError.textContent = '';
    }
    
    if (isValid) {
        // Submit form to server
        const formData = new FormData(event.target);
        submitRegistration(formData);
    }
    
    return false;
}

// Helper Functions
function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
}

function validatePhone(phone) {
    const re = /^[0-9]{10}$/;
    return re.test(phone);
}

// API Calls
async function submitLogin(formData) {
    try {
        const response = await fetch('auth/login.php', {
            method: 'POST',
            body: formData
        });
        
        const data = await response.json();
        
        if (data.success) {
            window.location.reload();
        } else {
            alert(data.message || 'Login failed. Please try again.');
        }
    } catch (error) {
        console.error('Login error:', error);
        alert('An error occurred. Please try again.');
    }
}

async function submitRegistration(formData) {
    try {
        const response = await fetch('auth/register.php', {
            method: 'POST',
            body: formData
        });
        
        const responseText = await response.text(); // Get raw response first
        console.log('Raw server response:', responseText);
        
        try {
            const data = JSON.parse(responseText);
            if (data.success) {
                alert('Registration successful! Please login.');
                toggleAuthForms();
            } else {
                alert(data.message || 'Registration failed. Please try again.');
            }
        } catch (jsonError) {
            console.error('JSON parsing error:', jsonError);
            alert('Server returned an invalid response.');
        }
    } catch (error) {
        console.error('Registration error:', error);
        alert('An error occurred. Please try again.');
    }
}

</script>*/